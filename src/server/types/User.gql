enum Role {
  admin
  director
  manager
}
type User {
  _id: ID
  avatar: String
  username: String!
  email: String
  password: String
  roles:[Role]
  enabled: Boolean
  createdDate: String

}
input inputUser {
  id:ID
  avatar: String
  username: String
  email: String
  roles: [Role]
  enabled: Boolean
}
input inputProfile {
  _id:ID
  avatar: String
  username: String
  email: String
  changepassword:Boolean
  oldpassword:String
  newpassword:String
}
type Token {
  token: String!
}

type Query {
  getCurrentUser: User
  getUsers: [User]
}

type Mutation {
  modifyProfile(input:inputProfile!):User
  modifyUser(input: inputUser!):User
  deleteUser(id: ID!):User
  enabledUser(id: ID!, enabled: Boolean!):User
  signIn(username: String!, password: String!): Token
  signUp(username: String!,email: String!, password: String!): User
}
